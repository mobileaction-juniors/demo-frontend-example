{"ast":null,"code":"import \"core-js/modules/es.string.trim.js\";\nexport default {\n  name: 'ma-keyword-generator',\n  data: function data() {\n    return {\n      inputText: '',\n      keywords: []\n    };\n  },\n  methods: {\n    countKeywords: function countKeywords() {\n      // Add your logic to count keywords here\n      // Example implementation:\n      var cleanedText = this.cleanText(this.inputText);\n      var words = cleanedText.split(' ');\n      this.keywords = words;\n    },\n    cleanText: function cleanText(text) {\n      // Implement text cleaning logic here if required\n      // Remove special characters, punctuation, etc.\n      // Return the cleaned text\n      return text.trim();\n    }\n  }\n};","map":{"version":3,"names":["name","data","inputText","keywords","methods","countKeywords","cleanedText","cleanText","words","split","text","trim"],"sources":["src/pages/keyword-generator/KeywordGenerator.vue"],"sourcesContent":["<template>\r\n  <div class=\"ma-keywords-generator\">\r\n    <div class=\"ma-header\">\r\n      <span>Keyword Generator</span>\r\n    </div>\r\n    <div class=\"ma-content\">\r\n      <div class=\"ma-input\">\r\n        <label for=\"inputText\">Input Text:</label>\r\n        <textarea id=\"inputText\" v-model=\"inputText\" rows=\"5\"></textarea>\r\n        <button @click=\"countKeywords\">Count</button>\r\n      </div>\r\n      <div class=\"ma-generated-keywords\">\r\n        <div class=\"ma-keyword-section\">\r\n          <div class=\"ma-keyword-title\">Keywords:</div>\r\n          <div class=\"ma-keyword-list\">\r\n            <ul>\r\n              <li v-for=\"keyword in keywords\" :key=\"keyword\">{{ keyword }}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ma-keyword-generator',\r\n  data() {\r\n    return {\r\n      inputText: '',\r\n      keywords: [],\r\n    };\r\n  },\r\n  methods: {\r\n    countKeywords() {\r\n      // Add your logic to count keywords here\r\n      // Example implementation:\r\n      const cleanedText = this.cleanText(this.inputText);\r\n      const words = cleanedText.split(' ');\r\n      this.keywords = words;\r\n    },\r\n    cleanText(text) {\r\n      // Implement text cleaning logic here if required\r\n      // Remove special characters, punctuation, etc.\r\n      // Return the cleaned text\r\n      return text.trim();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add your custom styles here if needed */\r\n</style>\r\n"],"mappings":";AA0BA;EACAA,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,SAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,aAAA,WAAAA,cAAA;MACA;MACA;MACA,IAAAC,WAAA,QAAAC,SAAA,MAAAL,SAAA;MACA,IAAAM,KAAA,GAAAF,WAAA,CAAAG,KAAA;MACA,KAAAN,QAAA,GAAAK,KAAA;IACA;IACAD,SAAA,WAAAA,UAAAG,IAAA;MACA;MACA;MACA;MACA,OAAAA,IAAA,CAAAC,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}